[[plugins]]
repo = 'neovim/nvim-lspconfig'
if = 'has("nvim")'
depends = 'ddc.vim'
hook_source = '''
  lua << EOF
    local capabilities = vim.lsp.protocol.make_client_capabilities()
    capabilities.textDocument.completion.completionItem.snippetSupport = true

 --   require'lspconfig'.solargraph.setup{}
 --   require'lspconfig'.denols.setup{}
 --   require'lspconfig'.dartls.setup{}
 --   require'lspconfig'.sourcekit.setup{capabilities = capabilities}
 --   require'lspconfig'.julials.setup{}
 --   require'lspconfig'.pylsp.setup{capabilities=capabilities}
EOF
'''

[[plugins]]
repo = 'williamboman/mason.nvim'
on_event = ['BufRead']
lua_source = '''
require('mason').setup()
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
depends = 'nvim-lspconfig'
lua_source = '''
require('mason-lspconfig').setup_handlers({ function(server_name)
        local nvim_lsp = require('lspconfig')

        local opts = {}
        opts.on_attach = function(_, bufnr)
        local bufopts = { silent = true, buffer = bufnr }
        vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, bufopts)
        vim.keymap.set('n', 'gtD', vim.lsp.buf.type_definition, bufopts)
        vim.keymap.set('n', 'grf', vim.lsp.buf.references, bufopts)
        vim.keymap.set('n', '<space>p', vim.lsp.buf.format, bufopts)
        end

        nvim_lsp[server_name].setup(opts)
        })
'''
